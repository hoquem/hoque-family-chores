rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is a family member
    function isFamilyMember(familyId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyId == familyId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;

      // Rules for badges subcollection
      match /badges/{badgeId} {
        allow read: if isAuthenticated() && request.auth.uid == userId;
        allow write: if isAuthenticated() && request.auth.uid == userId;
      }

      // Rules for achievements subcollection
      match /achievements/{achievementId} {
        allow read: if isAuthenticated() && request.auth.uid == userId;
        allow write: if isAuthenticated() && request.auth.uid == userId;
      }
    }

    // Rules for the 'families' collection
    match /families/{familyId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        request.auth.uid == resource.data.creatorUserId ||
        isFamilyMember(familyId)
      );
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.creatorUserId;

      // Rules for tasks subcollection
      match /tasks/{taskId} {
        allow read: if isAuthenticated() && isFamilyMember(familyId);
        allow create: if isAuthenticated() && isFamilyMember(familyId);
        allow update: if isAuthenticated() && isFamilyMember(familyId) && (
          request.auth.uid == resource.data.createdBy ||
          request.auth.uid == resource.data.assigneeId
        );
        allow delete: if isAuthenticated() && isFamilyMember(familyId) && request.auth.uid == resource.data.createdBy;
      }
    }

    // Rules for the 'badges' collection
    match /badges/{badgeId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Rules for the 'achievements' collection
    match /achievements/{achievementId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Rules for the 'notifications' collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }
  }
} 